library(tidyverse)
library(vroom)
library(tidymodels)
library(glmnet)
library(poissonreg)
library(rpart)
library(ranger)
setwd("./KaggleBikeShare")
bikeTrain <- vroom("./train.csv")
bikeTest <- vroom("test.csv")
bikeTrain <- bikeTrain %>%
select(-casual, -registered)
bikeTrain <- bikeTrain %>%
mutate(count = log(count))
bike_recipe <- recipe(count~., data=bikeTrain) %>%
step_mutate(weather=ifelse(weather==4, 3, weather)) %>% #Relabel weather 4 to 3
step_mutate(weather=factor(weather, levels=1:3, labels=c("Sunny", "Mist", "Rain"))) %>%
step_mutate(season=factor(season, levels=1:4, labels=c("Spring", "Summer", "Fall", "Winter"))) %>%
step_mutate(weekend = ifelse((workingday == 0 & holiday == 0), 1, 0)) %>%
step_mutate(holiday=factor(holiday, levels=c(0,1), labels=c("No", "Yes"))) %>%
step_mutate(workingday=factor(workingday,levels=c(0,1), labels=c("No", "Yes"))) %>%
step_mutate(weekend=factor(weekend, levels = c(0,1), labels = c("No", "Yes"))) %>%
step_time(datetime, features="hour") %>%
step_rm(workingday, datetime, atemp) %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
my_mod <- rand_forest(mtry = tune(),
min_n = tune(),
trees=500) %>%
set_engine("ranger") %>%
set_mode("regression")
rand_forest_wf <- workflow() %>%
add_recipe(bike_recipe) %>%
add_model(my_mod)
tuning_grid <- grid_regular(mtry(range = c(1,9)),
min_n(),
levels = 5)
folds <- vfold_cv(bikeTrain, v = 5, repeats = 1)
CV_results <- rand_forest_wf %>%
tune_grid(resamples=folds,
grid=tuning_grid,
metrics=metric_set(rmse, mae, rsq))
bestTune <- CV_results %>%
select_best("rmse")
final_wf <- rand_forest_wf %>%
finalize_workflow(bestTune) %>%
fit(data = bikeTrain)
preds <- final_wf %>%
predict(new_data = bikeTest)
preds_function <- function(bike_predictions) {
bike_predictions$.pred[is.na(bike_predictions$.pred)] <- 0
bike_predictions$.pred[bike_predictions$.pred < 0] <- 0
preds <- cbind(bikeTest$datetime, bike_predictions)
colnames(preds) <- c("datetime","count")
preds$datetime <- as.character(format(preds$datetime))
preds$count <- exp(preds$count)
return(preds)
}
final_preds <- preds_function(preds)
vroom_write(final_preds, "final_predictions.csv", ",")
